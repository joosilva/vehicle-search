from src.domain.dto.filtro_veiculo_dto import FiltroVeiculo
from src.domain.server.veiculo_server import VeiculoServer
from src.domain.util.input_validate import InputValidator

from src.domain.exceptions.input_validator_exception import InputValidatorException

class ChatBot:

    def __init__(self):
        self.nome_usuario = ""

    def iniciar_chat(self):
        chat_ativo = True

        print(f"ğŸ¤–(Bot - C2S): OlÃ¡! Sou o Bot, da C2S e estou aqui para te ajudar a "
                "encontrar o melhor veÃ­culo para atender Ã s suas expectativas.")
        
        while not self.nome_usuario.strip():
            self.nome_usuario = input(f"ğŸ¤–(Bot - C2S): Antes de iniciarmos, por favor me diga seu nome para que eu possa te identificar: "
                "\n(Este dado nÃ£o serÃ¡ usado externamente)\n")

        print(f"ğŸ¤–(Bot - C2S): Muito prazer, { self.nome_usuario }! "
                "Antes de prosseguirmos, aguarde alguns instantes enquanto gero os dados dos veÃ­culos...")
        
        server = VeiculoServer()
        server.gerar_dados_veiculos()

        print(f"ğŸ¤–(Bot - C2S): JÃ¡ terminei!")
        
        while chat_ativo:
            print(f"ğŸ¤–(Bot - C2S): Vamos lÃ¡! Vou te ajudar a encontrar seu veÃ­culo!")
            print(f"ğŸ¤–(Bot - C2S): Irei fazer algumas perguntas e caso nÃ£o deseje filtrar um veÃ­culo "
                    f"por algum dos campos que eu perguntar, basta apertar a tecla 'ENTER'.")

            validate = InputValidator()
            msg_campo_invalido = f"ğŸ¤–(Bot - C2S): Por favor, digite um valor vÃ¡lido ou pressione 'ENTER' para pular este campo."

            marca = validate.validar_input_str(f"ğŸ¤–(Bot - C2S): Me conta, qual a marca que vocÃª estÃ¡ buscando?\n")
            modelo = validate.validar_input_str(f"ğŸ¤–(Bot - C2S): VocÃª jÃ¡ tem um modelo em mente? Se sim, qual?\n")
            tipo_combustivel = validate.validar_input_str(f"ğŸ¤–(Bot - C2S): VocÃª gostaria de um veÃ­culo com qual tipo de combustÃ­vel?\n")
            
            while True:
                try:
                    ano_min = validate.validar_input_int(f"ğŸ¤–(Bot - C2S): Posso te apresentar veÃ­culos a partir de que ano de fabricaÃ§Ã£o?\n")
                    break
                except InputValidatorException:
                    print(msg_campo_invalido)

            while True:
                try:
                    ano_max = validate.validar_input_int(f"ğŸ¤–(Bot - C2S): VocÃª gostaria que eu lhe mostrasse modelos de veÃ­culos atÃ© que ano?\n")
                    break
                except InputValidatorException:
                    print(msg_campo_invalido)

            while True:
                try:
                    preco_min = validate.validar_input_float(f"ğŸ¤–(Bot - C2S): VocÃª jÃ¡ pensou no valor mÃ­nimo que quer investir (em R$)?\n")
                    break
                except InputValidatorException:
                    print(msg_campo_invalido)

            while True:
                try:
                    preco_max = validate.validar_input_float(f"ğŸ¤–(Bot - C2S): AtÃ© quanto estÃ¡ disposto a investir em um veÃ­culo (em R$)?\n")
                    break
                except InputValidatorException:
                    print(msg_campo_invalido)

            cor = validate.validar_input_str(f"ğŸ¤–(Bot - C2S): Existe uma cor especÃ­fica que vocÃª deseja para seu veÃ­culo?\n")

            filtro = FiltroVeiculo (
                marca = marca,
                modelo = modelo,
                tipo_combustivel = tipo_combustivel,
                ano_min = ano_min,
                ano_max = ano_max,
                preco_min = preco_min,
                preco_max = preco_max,
                cor = cor
            )

            print(f"ğŸ¤–(Bot - C2S): Ã“timas escolhas, { self.nome_usuario }! Com base nesses dados, irei buscar os melhores veÃ­culos para vocÃª.")
            
            veiculos: list = server.buscar_veiculos(filtro)

            if len(veiculos) == 0:
                print(f"ğŸ¤–(Bot - C2S): Poxa. NÃ£o encontrei nenhum veÃ­culo com essas especificaÃ§Ãµes.")
            else:
                print("ğŸ¤–(Bot - C2S): Aqui estÃ£o as informaÃ§Ãµes dos veÃ­culos que encontrei para vocÃª:")

                for i, veiculo in enumerate(veiculos, start=1): 
                    print(f"\n______________________________________({ i })______________________________________\n")
                    
                    veiculo.print_dados_veiculo()

            chat_ativo = input(f"\nğŸ¤–(Bot - C2S): Deseja realizar uma nova busca?\n").upper().startswith(("S", "Y"))

        print(f"ğŸ¤–(Bot - C2S): Espero tÃª-lo ajudado. Se precisar Ã© sÃ³ me chamar novamente. AtÃ© a prÃ³xima, { self.nome_usuario }!")
